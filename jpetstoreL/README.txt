	build/ 	
		Created by the build tasks and used to hold project-wide build items such as compiled source, assembled modules, or files generated by the Javadoc tool. 
		When deploying a Web module, consider building an unzipped view of the component to enable deployment as a directory structure directly to an application server.

	conf/ 	
		Configuration or other set-up files, such as Web service configuration files needed by a component or module during the build process. Includes files that are placed in a module's META-INF directory. Also includes configuration files that may require processing prior to being placed in the final module.

	dist/ 	
		Created by the top-level ant dist task, structures under this directory represent the unzipped versions of the binary created by the project.

	docs/ 	
		Contains all the documentation for a project, including HTML files, installation and setup files, etc.

	lib/ 	
		Holds specific versions of components of external libraries used by an application. 
		If you have multiple binaries in a project, it may be difficult for users with low bandwidth to download the application. Consider including ant targets that download the correct versions of dependent binaries at build time. 

	setup/ 	
		Contains files that are relevant to the environment for a project or application. This directory may contain database SQL files, ant files containing shared tasks, or any other files that are used to configure a container for a project or application.

	web/ 	
		Contains the static content of the resulting WAR file.

	web/WEB-INF/ 	
		Contains the web.xml deployment descriptor and static configuration files, such as faces-config.xml. May also include vendor-specific runtime deployment descriptors, such as sun-web.xml. Generally, this directory contains files that are copied rather than changed during a build. Dynamic configuration files should be placed in the conf/ directory. 

	test/ 	
		The top-level test/ directory contains project-wide tests. Each individual component or module should also include a unit test, which should be placed in the src/test directory for each component or module.
